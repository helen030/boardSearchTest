<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="demos.common.web.mappers.articleMapper">

    <select id="getTime" resultType="string">
        SELECT NOW()
    </select>

    <insert id="create">
        INSERT INTO tbl_article
        (
            title,
            content,
            writer,
            regdate,
            viewcnt
        )
        VALUES
        (
            #{title},
            #{content},
            #{writer},
            #{regDate},
            #{viewCnt}
        )
    </insert>

    <select id="read" resultMap="ArticleResultMap">
        SELECT
        article_no
        , title
        , content
        , writer
        , regdate
        , viewcnt
        FROM
        tbl_article
        WHERE article_no = #{articleNo}
    </select>

    <update id="update">
        UPDATE tbl_article
        SET
        title = #{title}
        , content = #{content}
        WHERE
        article_no = #{articleNo}
    </update>

    <delete id="delete">
        DELETE FROM tbl_article
        WHERE article_no = #{articleNo}
    </delete>

    <select id="listAll" resultMap="ArticleResultMap">
        SELECT
            *
        FROM tbl_article
        WHERE article_no <![CDATA[ >]]> 0
        ORDER BY article_no DESC, regdate DESC
    </select>

    <select id="listPaging" resultMap="ArticleResultMap">
        SELECT
        *
        FROM tbl_article
        WHERE article_no <![CDATA[ >]]> 0
        ORDER BY article_no DESC, regdate DESC
        LIMIT #{page}, 10
    </select>

    <select id="listCriteria" resultMap="ArticleResultMap">
        SELECT
        *
        FROM tbl_article
        WHERE article_no <![CDATA[ >]]> 0
        ORDER BY article_no DESC, regdate DESC
        LIMIT #{pageStart}, #{perPageNum}
    </select>

    <select id="countArticles" resultType="Integer">
        SELECT
            COUNT(article_no)
        FROM tbl_article
        WHERE article_no <![CDATA[ > ]]> 0
    </select>

    <select id="listSearch" resultMap="ArticleResultMap">
        SELECT
        *
        FROM tbl_article
        WHERE article_no <![CDATA[ >]]> 0
        <include refid="search"/>
        ORDER BY article_no DESC, regdate DESC
        LIMIT #{pageStart}, #{perPageNum}
    </select>

    <select id="countSearchedArticles" resultType="Integer">
        SELECT
        COUNT(article_no)
        FROM tbl_article
        WHERE article_no <![CDATA[ > ]]> 0
        <include refid="search"/>
    </select>

    <sql id="search">
        <if test="searchType != null">
            <if test="searchType == 't'.toString()">
                AND title LIKE CONCAT('%', #{keyword}, '%')
            </if>
            <if test="searchType == 'c'.toString()">
                AND content LIKE CONCAT('%', #{keyword}, '%')
            </if>
            <if test="searchType == 'w'.toString()">
                AND writer LIKE CONCAT('%', #{keyword}, '%')
            </if>
            <if test="searchType == 'tc'.toString()">
                AND (
                title LIKE CONCAT('%', #{keyword}, '%')
                OR content LIKE CONCAT('%', #{keyword}, '%')
                )
            </if>
            <if test="searchType == 'cw'.toString()">
                AND (
                content LIKE CONCAT('%', #{keyword}, '%')
                OR writer LIKE CONCAT('%', #{keyword}, '%')
                )
            </if>
            <if test="searchType == 'tcw'.toString()">
                AND (
                title LIKE CONCAT('%', #{keyword}, '%')
                OR content LIKE CONCAT('%', #{keyword}, '%')
                OR writer LIKE CONCAT('%', #{keyword}, '%')
                )
            </if>
        </if>
    </sql>

    <!-- 자바객체의 필드변수명과 DB의 칼럼명이 불일치할 경우의 처리방법 -->
    <resultMap id="ArticleResultMap" type="ArticleVO">
        <id property="articleNo" column="article_no"/><!-- 컬럼에 언더스코어(_) 가 있다면 쿼리에서 AS 를 사용해주거나 왼쪽과같이 resultMap을 통해 DB칼럼명과 자바변수명을 일치시켜주는 작업을 해고, <select>태그 에서 resultType 속성 대신,  ㄱㄷ녀ㅣ스메 속성으로 변경해주면 해결 할 수 있다. -->
        <result property="title" column="title" />
        <result property="content" column="content" />
        <result property="writer" column="writer" />
        <result property="regDate" column="regdate" />
        <result property="viewCnt" column="viewcnt" />
    </resultMap>

</mapper>

<!--

if : 코드로 작성할 때의 if구문에 대한 처리
<if test="title != null">
AND title like #{like}
</if>


choose(when, otherwise) : switch와 같은 상황에 대한 처리
<choose>
<when test="title != null">
    AND title like #{like}
</when>
<when test="author != null and author.name != null">
    AND author_name like #{author.name}
</when>
<otherwise>
    AND feathered = 1
</otherwise>
</choose>


trim(where, set) : 로직을 처리하면서 필요한 구문을 변경
<trim prefix="WHERE" prefixOverrides="AND|OR">
...
</trim>


foreach : 컬렉션에 대한 순환처리
<foreach item="item" index="index" collection="list" open="(" seperator="," close="">
#{item}
</foreach>

-->